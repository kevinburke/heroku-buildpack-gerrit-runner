#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir>

# fail fast
set -ex

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_start"

BIN_DIR=$(cd $(dirname $0); pwd) # absolute path

# parse args
BUILD_DIR=$1
CACHE_DIR=$2
ENV_DIR=$3

LOGGER_FLAGS=""

# include .files when moving things around
shopt -s dotglob

#create the cache dir if it doesn't exist
mkdir -p $CACHE_DIR

echo -n "-----> Installing jvm-common ... "
curl --silent --location https://heroku-jvm-common.s3.amazonaws.com/jvm-buildpack-common.tar.gz | tar xz
. bin/util
. bin/java

echo " done"

export_env_dir $ENV_DIR

# create default system.properties
if [ ! -f ${BUILD_DIR}/system.properties ]; then
  echo "java.runtime.version=1.7" > ${BUILD_DIR}/system.properties
fi

# install JDK
javaVersion=$(detect_java_version ${BUILD_DIR})
echo -n "-----> Installing OpenJDK ${javaVersion}..."
install_java ${BUILD_DIR} ${javaVersion}
jdk_overlay ${BUILD_DIR}
echo " done"

logger -p user.notice -t "slugc[$$]" "language_pack_java java_compile_end $LOGGER_FLAGS"

cd $BUILD_DIR

if [ ! -f Procfile ]; then
  cat > Procfile <<EOF
web: echo "starting Gerrit" && bash bin/gerrit.sh status && java -jar bin/gerrit.war init --install-plugin singleusergroup && java -jar bin/gerrit.war init --batch && java -jar bin/gerrit.war reindex -d /app && cat etc/gerrit.config && bash bin/gerrit.sh run
config_vars:
  JAVA_OPTS: -Dfile.encoding=UTF-8 -server -Xmx512m -XX:+UseCompressedOops
  JAVA_HOME: /app/.jdk
  PATH:      /app/.jdk/bin:/app/bin:/app/usr/bin:/bin:/usr/bin
  START_STOP_DAEMON: 0
EOF
fi

env

GERRIT_CONFIG="$BIN_DIR/../etc/gerrit.config"
GERRIT_SECURE_CONFIG="$BIN_DIR/../etc/secure.config"

# set github configs
git config --file "$GERRIT_CONFIG" 'github.clientId' "$GERRIT_GITHUB_CLIENT_ID"
git config --file "$GERRIT_SECURE_CONFIG" 'github.clientSecret' "$GERRIT_GITHUB_CLIENT_SECRET"

# set database url
git config --file "$GERRIT_CONFIG" 'database.type' 'POSTGRESQL'
git config --file "$GERRIT_CONFIG" 'database.hostname' "$GERRIT_DB_HOSTNAME"
git config --file "$GERRIT_CONFIG" 'database.database' "$GERRIT_DB_DATABASE"
git config --file "$GERRIT_CONFIG" 'database.username' "$GERRIT_DB_USERNAME"
git config --file "$GERRIT_CONFIG" 'database.password' "$GERRIT_DB_PASSWORD"

git config --file "$GERRIT_CONFIG" 'gerrit.basePath' "$GERRIT_SITE/git"
git config --file "$GERRIT_CONFIG" 'gerrit.canonicalWebUrl' "$GERRIT_WEB_URL"

chmod 755 "$BIN_DIR/gerrit.sh"
mkdir -p "$BUILD_DIR/bin"
cp -a "$BIN_DIR/gerrit.sh" "$BUILD_DIR/bin/"

mkdir -p "$BUILD_DIR/etc"
cp -a "$BIN_DIR/../etc/gerrit.config" "$BUILD_DIR/etc/"
cp -a "$BIN_DIR/../etc/secure.config" "$BUILD_DIR/etc/" || true
cat "$BUILD_DIR/etc/gerrit.config"
echo "echoing secure config"
cat "$BUILD_DIR/etc/secure.config" || true

mkdir -p "$BUILD_DIR/cache"
mkdir -p "$BUILD_DIR/data"
mkdir -p "$BUILD_DIR/git"
mkdir -p "$BUILD_DIR/index"
mkdir -p "$BUILD_DIR/logs"

PROFILE_PATH="$BUILD_DIR/.profile.d/java.sh"
mkdir -p $(dirname $PROFILE_PATH)
echo 'export PATH="/app/.jdk/bin:$PATH"' >> $PROFILE_PATH
echo 'export JAVA_TOOL_OPTIONS="$JAVA_TOOL_OPTIONS -Djava.rmi.server.useCodebaseOnly=true"' >> $PROFILE_PATH
echo 'export JAVA_HOME=/app/.jdk' >> $PROFILE_PATH

logger -p user.notice -t "slugc[$$]" "gerrit runner end $LOGGER_FLAGS"
